




LNX_MAIN_NAME = tblgen


BUILD_DIR:=../../build/$(TARGET)

OBJ_DIR := $(BUILD_DIR)/OBJS

MAIN := $(BUILD_DIR)/$(LNX_MAIN_NAME)

SRCS := $(wildcard ./*.cpp)

OBJS := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(notdir $(SRCS))) 

INCLUDES  = -I../.. -I./CodeGen -I.. -I. 

LNX_CC_DEFINES = -DLINUX -DUNIX_OS -DqLittleEndian -D WITH_ONLINE_COMPILER -D ATI_OS_LINUX   -D ATI_COMP_GCC

ifeq ("$(ARCH)","x64")
ARCH_CFLAGS = -m64    -D__x86_64__ -D__AMD64__ -D ATI_ARCH_X86 -D ATI_BITS_64 -D ATI_ENDIAN_LITTLE -D LITTLEENDIAN_CPU
else
ARCH_CFLAGS = -m32    -D__i386__               -D ATI_ARCH_X86 -D ATI_BITS_32 -D ATI_ENDIAN_LITTLE -D LITTLEENDIAN_CPU -march=i686 -msse2
endif

ifeq ("$(FLAVOUR)","DEBUG")
FLAVOUR_FLAGS= -ggdb -D_DEBUG
else
FLAVOUR_FLAGS=       -D_NDEBUG
endif

LNX_COMMON_CFLAGS =  -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -Wall -Wno-unused -Werror  -fPIC -pipe  -fmerge-all-constants -fno-tree-vectorize 
CFLAGS = $(LNX_COMMON_CFLAGS) $(ARCH_CFLAGS) $(FLAVOUR_FLAGS) $(LNX_CC_DEFINES)

LNX_PREBUILD_LIBS =  $(BUILD_DIR)/LIBLLVM.a
LNX_SYSTEM_LIBS = -lstdc++ -lpthread -ldl -lm $(ARCH_CFLAGS)
LNX_DISABLE_LD_WARNINGS =
LNX_LDFLAGS  = $(ARCH_CFLAGS) 



LNX_CC = g++
LNX_LINK = g++

all: $(MAIN)


$(MAIN): $(OBJS)
	echo Linking $(MAIN_NAME) ...
	$(LNX_LINK) $(LDFLAGS) $(OBJS) $(LNX_SYSTEM_LIBS) $(LNX_PREBUILD_LIBS) -o $@
	

$(OBJ_DIR)/%.o : %.cpp  $(OBJ_DIR)
	echo "$< -> $@"
	$(LNX_CC) $(CFLAGS) $(INCLUDES) -o $@ -c $<

$(OBJ_DIR): 
	mkdir -p $@

.PHONY: clean all

clean: 
	rm -rf $(BUILD_DIR)


