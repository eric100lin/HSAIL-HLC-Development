




LNX_MAIN_NAME = LIBHSAIL.a


BUILD_DIR:=../build/$(TARGET)

TBLGEN=$(BUILD_DIR)/../lnx/tblgen

OBJ_DIR := $(BUILD_DIR)/OBJS

MAIN := $(BUILD_DIR)/$(LNX_MAIN_NAME)

SRCS := $(wildcard *.cpp)

OBJS := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(SRCS)) 


HSAILItems := 

DEPS_NAMES := HSAILItems.inc HSAILDirectives.inc HSAILOperands.inc HSAILInst.inc HSAILValidator.inc HSAILInstValidation.inc

DEPS := $(patsubst  %.inc,$(OBJ_DIR)/%.inc,$(DEPS_NAMES)) 

VPATH = Object Support

INCLUDES  = -I.. -I. -I/usr/include


#Include path with generated below *.inc files
INCLUDES  += -I$(OBJ_DIR)


LNX_CC_DEFINES = -DLINUX -DUNIX_OS -DqLittleEndian -D WITH_ONLINE_COMPILER -D ATI_OS_LINUX   -D ATI_COMP_GCC   -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS 

ifeq ("$(ARCH)","x64")
ARCH_CFLAGS = -m64    -D__x86_64__ -D__AMD64__ -D ATI_ARCH_X86 -D ATI_BITS_64 -D ATI_ENDIAN_LITTLE -D LITTLEENDIAN_CPU
else
ARCH_CFLAGS = -m32    -D__i386__               -D ATI_ARCH_X86 -D ATI_BITS_32 -D ATI_ENDIAN_LITTLE -D LITTLEENDIAN_CPU -march=i686 -msse2
endif

ifeq ("$(FLAVOUR)","DEBUG")
FLAVOUR_FLAGS= -ggdb -D_DEBUG
else
FLAVOUR_FLAGS=       -D_NDEBUG
endif

LNX_COMMON_CFLAGS =  -Wall -Wno-reorder -Wno-unused -Werror  -fPIC -pipe  -fmerge-all-constants -fno-tree-vectorize 
CFLAGS = $(LNX_COMMON_CFLAGS) $(ARCH_CFLAGS) $(FLAVOUR_FLAGS) $(LNX_CC_DEFINES)

LNX_PREBUILD_LIBS =  
LNX_SYSTEM_LIBS = -lstdc++ -lpthread -ldl -lm $(ARCH_CFLAGS) 
LNX_DISABLE_LD_WARNINGS =
LNX_LDFLAGS  = $(ARCH_CFLAGS) 


LNX_CC = g++
LNX_AR = ar

all: $(MAIN)


$(MAIN): $(OBJS)  $(OBJ_DIR)  $(DEPS)
	echo Packing into $(MAIN_NAME) ...
	$(LNX_AR)  -r $@ $(OBJS)


$(OBJ_DIR)/%.o : ./%.cpp  $(OBJ_DIR) $(DEPS)
	echo "$< -> $@"  
	$(LNX_CC) $(CFLAGS) $(INCLUDES) -o $@ -c $<

$(OBJ_DIR)/HSAILItems.inc: HSAILItems.td $(TBLGEN)
	echo "$< -> $@"  
	$(TBLGEN) -gen-brig-interface HSAILItems.td  > $@
	 
$(OBJ_DIR)/HSAILDirectives.inc: HSAILItems.td $(TBLGEN)
	echo "$< -> $@"  
	$(TBLGEN) -gen-brig-directive-initializers HSAILItems.td  > $@	 

$(OBJ_DIR)/HSAILOperands.inc: HSAILItems.td $(TBLGEN)
	echo "$< -> $@"  
	$(TBLGEN) -gen-brig-operand-initializers HSAILItems.td  > $@	 

$(OBJ_DIR)/HSAILInst.inc: HSAILItems.td $(TBLGEN)
	echo "$< -> $@"  
	$(TBLGEN) -gen-brig-inst-initializers HSAILItems.td  > $@	 

$(OBJ_DIR)/HSAILValidator.inc: HSAILItems.td $(TBLGEN)
	echo "$< -> $@"  
	$(TBLGEN) -gen-brig-validators HSAILItems.td  > $@	 

$(OBJ_DIR)/HSAILInstValidation.inc: Instructions.td $(TBLGEN)
	echo "$< -> $@"  
	$(TBLGEN) -gen-brig-inst-validators Instructions.td  > $@
	
$(OBJ_DIR):
	echo "TARGET=$(NEWTARGET)  OLDTARGET=$(TARGET)"
	mkdir -p $@

.PHONY: clean all

clean: 
	rm -rf $(OBJ_DIR1) $(OBJ_DIR2) $(MAIN)


